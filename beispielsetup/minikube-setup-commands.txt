# Setup Minikube with calico
minikube start --cpus 4 --memory 16384 --cni calico 
kubectl calico version  (--> verison conflict but not a huge problem)

# Setup multus
minikube stop
minikube start --network-plugin=cni --enable-default-cni --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16
kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
kubectl taint nodes --all node-role.kubernetes.io/master-
--> gibt not found zurück - muss so 
minikube stop
minikube start --network-plugin=cni --enable-default-cni --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16
kubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/master/deployments/multus-daemonset-thick.yml

--> ab jetzt auch mit nur "minikube start" Neustart möglich

# SSH-Schlüssel kopieren --> Schlüssel liegen im Beispielsetup
mkdir groups/g3
ssh-keygen -t rsa -b 4096 -C "ta key" -P "" -f "groups/id_rsa" -q
chmod +r groups/id_rsa
cp groups/id_rsa.pub groups/authorized_keys

ssh-keygen -t rsa -b 4096 -C "internal key group 3" -P "" -f groups/g3/id_rsa -q

kubectl create namespace as2
kubectl create namespace as1
kubectl label namespace as2 namespace=as2  (--> sehr wichtig, damit Namespaces von Networkpolicy aus adressiert werden können)
kubectl label namespace as1 namespace=as1

kubectl apply -f namespace-as2-isolation-policy.yaml (--> legt fest, dass pods nur noch auf Pods im Namespace zugreifen dürfen und von diesen zugegriffen werden)
kubectl get networkpolicy -n as2
[ kubectl delete networkpolicy -n as2 ...]


# Apply pod and bridge definitions via commands or via kubernetes dashboard
kubectl apply -f ip-pool.yaml
kubectl apply -f host.yaml
kubectl apply -f switch1.yaml
kubectl apply -f router1.yaml
kubectl apply -f host2.yaml
kubectl apply -f switch2.yaml
kubectl apply -f router2.yaml
kubectl apply -f ssh.yaml
...


# Access to the pods via this command or through kubernetes dashboard
kubectl exec -n as3 -it pod/mi3-gene-pod -- bash


##### Switch Setup ##### (kopied from original Mini-Internet Setup Script)
ovs-vsctl \
    -- add-br br0 \
    -- set bridge br0 stp_enable=true \
    -- set-fail-mode br0 standalone \
    -- set bridge br0 other_config:stp-system-id=11:11:11:11:11:11 \
    -- set bridge br0 other_config:stp-priority=1

ovs-vsctl add-port br0 s3 -- set Port s3 trunks=0
...


##### microk8s #######
# Install it on both VMs
sudo snap install microk8s --classic --channel=1.32
sudo usermod -a -G microk8s $USER
mkdir -p ~/.kube
chmod 0700 ~/.kube

# on first VM
microk8s add-node
# on secound VM
microk8s join 172.26.122.171:25000/9ce1ac3b56014d9e8923ad6489e87f66/bc5469f13b95