## --- Beginning of YAML file ---
## 1. Tell Kubernetes which API version to use
apiVersion: v1
## 2. Declare what kind of resource we want to create
kind: Pod
## 3. Set metadata for this resource
metadata:
  name: mi3-s4-pod ## Name of the Pod
  labels: ## Labels help us find and organize Pods
    app: mi3-s4
  annotations:
    k8s.v1.cni.cncf.io/networks: bridge-s4-fifa-conf@fifa4, bridge-s4-uefa-conf@uefa4, bridge-s4-gene-conf@gene
    'cni.projectcalico.org/ipAddrs': '["158.3.100.6"]'
## 4. Define what the Pod should contain
spec:
  containers: ## Pod can run one or more containers
    - name: mi3-s4
      image: docker.io/miniinterneteth/d_switch:latest
      securityContext:
        capabilities:
          add: ["NET_ADMIN", "ALL"]
          drop: ["SYS_RESOURCE"]
      sysctls:
        - name: net.ipv4.ip_forward
          value: "1"
        - name: net.ipv4.icmp_ratelimit
          value: "0"
        - name: net.ipv4.fib_multipath_hash_policy
          value: "1"
        - name: net.ipv4.conf.all.rp_filter
          value: "0"
        - name: net.ipv4.conf.default.rp_filter
          value: "0"
        - name: net.ipv4.conf.lo.rp_filter
          value: "0"
        - name: net.ipv4.icmp_echo_ignore_broadcasts
          value: "0"
        - name: net.ipv6.conf.all.disable_ipv6
          value: "0"
        - name: net.ipv6.conf.all.forwarding
          value: "1"
        - name: net.ipv6.icmp.ratelimit
          value: "0"
      ports: 
        - containerPort: 22
      volumeMounts:
      - mountPath: /root
        name: example-volume
  volumes:
  - name: example-volume
    # mount /data/foo, but only if that directory already exists
    hostPath:
      path: /home/adrian/miniinternetk8/beispielsetup/groups/g3